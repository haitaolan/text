console.log({}+{}.length);
在js里面，看到+号，它就是字符串的拼接 
如何把空对象转换成一个字符串，
如何理解原型/原型链？
object.prototype.toString.call({})

2)[] ==[]//false
3）[] ==![]//true
4)[] == false //true

定义一个原型
function Peple（name，age）{
	this.name = name;
	this.age = age;
}
People.prototype.seyHello = function(){
alert(this.name);
}
var p1 = new People('ychow',33)
var p2  = new People('xxx',38)
p1.sayHello == p2.sayHello; //true

给你一个数据，如何判断出他是什么数据类型
//object.prototype.toString.call(你要判断的数据)

//'[object String]'


//typeof 有哪些返回值，它的返回值都是字符串
//string number boolean object undefined function 6个

//js 基本数据类型
// string number Boolean  undefined null

[]==![] 是如何转换的
//“”，0，null， undefined 转成布尔值是一个false；
//对象，非空字符串，非0的数字都会转换成true；
1)![]首先转换成false
2）[]首先会转换成一个字符串，会转换成一个空的字符串
3）字符串会先转换成数字===》0
4）0===>false
对象-->转字符串 ---> 转数字 --->转布尔值

//== 和===有什么区别？
//==会发生隐式数据类型转换

我们在写程序时如果需要比较数据，不推荐使用==。


伪类选择器
：hover
：active
：link
：visited
：before
：after
：nth-child
：nth-last-children
：nth-of-type
：first-child
：last-child
：nth-last-of-child
：first-of-type
：last-of-type

：only-child 只有一个子元素
：empty 匹配空的（不包含任何内容，比如空格，回车）

表单里面的伪类
：enabled 可操作的
：checked 可选择的 
：disabled 不可操作的

：：first-letter 第一个文字
：：first-line  第一行
：：selection 用来设置选中文字样式
：：target  可以用来做一个选项卡
                                                                        
css3属性选择器
a[class]{color:red}
a[class='abc']{color:green} 匹配class等于abc的a元素，里面不能有其他值
a[class^='a']{color:yellow} 匹配class里面以a开头的a元素
a[class$ = 'b']{color: pink} 匹配是class里面以b结尾的a元素   
a[class* = 'b']{background:brown} 匹配class包含d的a元素
                                        
可以放多重条件
a[class = "abc"[id]] 匹配class等于abc的，并且带有id属性的a元素

ul li：nth-child（4）
首先找到ul里面的第四个li 如果第四个是li则会显示上面的样式，如果不是则不能显示上面的样式



如果想要实现一个富文本编辑器，可以使用下面的属性
contenteditable 可以让我们的元素能够动态地编辑


storage 用来存储数据的
cookie 和localStorage 和sessionStorage 有什么区别

cookie：
1）存储的体积比较小，大概4kb
2）存储的API是比较困难的
3）每一次http请求 ，都会发送cookie。会浪费宽带
4）里面存储的是字符串
5）里面一般用来保存用户名和密码

storage 的特点  	（IE8支持）
1）存储的体积比cookie多 大概几兆
2）存储的API非常简单
3）storage 分为两个 一个是localStorage 一个是sessionStorage
	localStorage存储数据是永久的，除非我们把它删除了
	sessionStorage只要浏览器关闭了，里面存储的数据就会消失
4）移动端都支持

如何使用storage（localStorage/sessionStorage）？
//localStorage.setItem(key)//获取storage
obj ={
k：v
}
//localStorage.getItem(key) //获取storage

//一次只能删除一个
删除storage localStorage.removItem（key）

//一次删除所有的storage里面的存储数据
localStorage.clean（） // clean里面没有参数

如果存储数据是对象，如果直接存进去，就会调用数据的toString方法
借助json对象
JSON.stringify() --->对象转换成字符串对象
JSON.parse() ---> 把字符串对象还原成对象

var obj = {}
obj.name = "dfdf";
obj[变量名]=值；
//简化LocalStorag存储以及获取值
localStorage.key = value // 存储value到localStorage里。
如果想要获取key的值：localStorage.key

用localStorage 来写一个本地购物车
es6字符串模板


css3样式
浏览器前缀 ：-webkit -o -ms -moz 
1）-webkit-user-select  1）none（所有内容 都不能选择） 2）text（只能选文字）不行！
2）：：-webkit-input-placeholder  修改placeholder默认样式
3）rgba（r,g,b,透明度）
opacity
filter：alpha（opacity = 30）

4）background
background-color
background-image
background-position
background-repeat

background-size：简写的时候，要加一个斜杠！！！
11）x,y
22)cover 放大填充
33) contain 缩小





